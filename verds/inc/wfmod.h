void checkVAR(MODmodule *m);
int hasvar(char *s);
MODmodule *clockMOD(MODmodule *m,MODoption *MODopt);
MODmodule *createclockmodule(MODmodule *m,char *var,char *mpname,char **lclk,int lc,MODoption *MODopt);
char *addINVcond(MODmodule *m,char *var,char *varass);
void addCLOCKdone(MODmodule *m,char *var,int maxt);
void addINVdone(MODmodule *m);
int getLCLOCKnames(char *var,char **lclock);
char *buildLCLOCKcond(char **lclk,int lc);
void rMAXD(char *s0);
char *buildDLFcond2(MODmodule *m);
char *buildDLFnaidlecond(MODmodule *m);
MODmodule *repSPECwithDLFcond(MODmodule *m0,int opt);
char *buildDLFcond(MODmodule *m);
MODmodule *flattMOD(MODmodule *m,MODdefinition *def);
int updatevarlist(MODmoduleproc *mp,MODmodule *m1,char **varlist);
MODmodule *createmodule(MODmoduleproc *mp,MODmodule *m1,MODdefinition *def);
MODmodule *searchmodule(MODmodule *m1,char *name);
char *consLCLOCKtrans(char *cname,char **lclock,int lcnt,int maxt,char *invcond);
char *MODapply(char *fn,char *fn1);
int MODparam(char **argv, int i);
MODmodule *getMOD(char *s);
char *getMODmain(char *s,MODmodule *m);
char *getMODmodule(char *s,MODmodule *m);
char *getMODproc(char *s,MODmodule *m);
char *writeMOD(MODmodule *m);
void freemodule(MODmodule *m);
extern MODoption *MODopt;;
char *mainparameters(int argc,char **argv);
int param0(char **argv, int i);
void getFILEname(char *s,char *s1);
